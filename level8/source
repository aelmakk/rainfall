#include <stdio.h>
#include <string.h>
#include <stdlib.h>
#include <stdbool.h>

struct auth{
    char name[31];
};

struct auth *auth;
struct service *service;

int     main(void)
{
    char buff[128];

    printf("%p, %p \n", auth, service);
    fgets(buff, 0x80, stdin);
    
    if (!strncmp(buff, "auth ", 5))
    {
        auth->first_mem = malloc(4);
       if (strlen(buff + 5) <= 30)
       {

       } 
    }
    else if (!strncmp(buff, "reset", 5))
    {
        free(0x8049aac);
    }
    else if (!strncmp(buff, "service", 6))
    {

    }
    else if (!strncmp(buff, "login", 5))
    {
        system("/bin/sh");
    }

    return (0);
}









int main(void)

{
  char cVar1;
  char *pcVar2;
  int iVar3;
  uint uVar4;
  byte *pbVar5;
  byte *pbVar6;
  bool bVar7;
  undefined uVar8;
  undefined uVar9;
  bool bVar10;
  undefined uVar11;
  byte bVar12;
  byte local_90 [5];
  char local_8b [2];
  char buff[128];
  
  bVar12 = 0;
  do {
    printf("%p, %p \n", auth, service);
    pcVar2 = fgets(buff, 128, stdin);
    bVar7 = false;
    bVar10 = pcVar2 == (char *)0x0;
    if (bVar10) {
      return 0;
    }
    if (!strncmp(buff, "auth ", 5))
    {
        auth = malloc(4);
        *auth = 0;
        if (strlen(buff + 5) <= 30) {
          strcpy((char *)auth , buff + 5);
        }
    }
    if (!strncmp(buff, "reset", 5))
        free(auth);
    iVar3 = 6;
    pbVar5 = local_90;
    pbVar6 = (byte *)"service";
    do {
      if (iVar3 == 0) break;
      iVar3 = iVar3 + -1;
      uVar9 = *pbVar5 < *pbVar6;
      uVar8 = *pbVar5 == *pbVar6;
      pbVar5 = pbVar5 + (uint)bVar12 * -2 + 1;
      pbVar6 = pbVar6 + (uint)bVar12 * -2 + 1;
    } while ((bool)uVar8);
    uVar11 = 0;
    uVar8 = (!(bool)uVar9 && !(bool)uVar8) == (bool)uVar9;
    if ((bool)uVar8) {
      uVar11 = (byte *)0xfffffff8 < local_90;
      uVar8 = acStack_89 == (char *)0x0;
      service = strdup(acStack_89);
    }
    iVar3 = 5;
    pbVar5 = local_90;
    pbVar6 = (byte *)"login";
    do {
      if (iVar3 == 0) break;
      iVar3 = iVar3 + -1;
      uVar11 = *pbVar5 < *pbVar6;
      uVar8 = *pbVar5 == *pbVar6;
      pbVar5 = pbVar5 + (uint)bVar12 * -2 + 1;
      pbVar6 = pbVar6 + (uint)bVar12 * -2 + 1;
    } while ((bool)uVar8);
    if ((!(bool)uVar11 && !(bool)uVar8) == (bool)uVar11) {
        if (auth[8] == 0)
            fwrite("Password:\n", 1, 10, stdout);
        else 
            system("/bin/sh");
    }
  } while (true);
}
